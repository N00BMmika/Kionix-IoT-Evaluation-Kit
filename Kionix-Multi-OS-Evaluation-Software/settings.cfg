;
; Settings for Kionix Multi-OS Evaluation Software
;

[connection]
; Bus index selection
; 1 Aardvark with I2C 
; 2 Aardvark with SPI
; 3 BLE  connection using "Kionix BLE Router"
; 4 direct i2c connection through Embedded Linux GPIO

;bus_index          = 3
;bus_index          = serial_com_arduino_usdc
;bus_index          = serial_com_arduino_a1
bus_index           = serial_com_kx_iot

[generic]
; Debug logging settings
;logging_level      = DEBUG                 ; DEBUG / INFO / WARNING / ERROR / CRITICAL
logging_level       = INFO                  ; DEBUG / INFO / WARNING / ERROR / CRITICAL
;logging_level       = WARNING                  ; DEBUG / INFO / WARNING / ERROR / CRITICAL
;logging_level       = ERROR                ; DEBUG / INFO / WARNING / ERROR / CRITICAL
log_to_console      = 1                     ; 0/1
;log_file           = kionix_cli_evkit.log  ; log filename, leave empty if no file logging
log_file            = 

; This setting defines how data ready function works 
;drdy_operation     = ADAPTER_GPIO1_INT     ; DRDY_REG_POLL / INTERVAL_READ / ADAPTER_GPIO1_INT / ADAPTER_GPIO2_INT
;drdy_operation     = ADAPTER_GPIO2_INT     ; DRDY_REG_POLL / INTERVAL_READ / ADAPTER_GPIO1_INT / ADAPTER_GPIO2_INT
;drdy_operation     = DRDY_REG_POLL         ; DRDY_REG_POLL / INTERVAL_READ / ADAPTER_GPIO1_INT / ADAPTER_GPIO2_INT

drdy_operation      = INTERVAL_READ         ; DRDY_REG_POLL / INTERVAL_READ / ADAPTER_GPIO1_INT / ADAPTER_GPIO2_INT
drdy_poll_interval  = 40                    ; interval in ms (default 40 ms -> 25Hz)

; Interrupt polarity. Use active low as default.
;int1_active_high    = TRUE                 ; TRUE / FALSE
;int2_active_high    = TRUE                 ; TRUE / FALSE

int1_active_high    = FALSE                 ; TRUE / FALSE
int2_active_high    = FALSE                 ; TRUE / FALSE


; This settings is for generic GPIO vs register polling configuration. 
; TRUE,  Use adapter gpio as interrupt input pins.
; FALSE, Poll interrupts from sensor registers.
use_adapter_int_pins = FALSE

[i2c]
; Aardvark i2c bus speed in kbit/s
;standard speed 100
;full speed     400
;high speed     3400
bitrate             = 400
bus_timeout         = 150                   ; bus time out in ms

[spi]
; Aardvark SPI bus configuration. To be common when more SPI adapters supported
polarity            = RISING_FALLING        ; RISING_FALLING / FALLING_RISING
phase               = SAMPLE_SETUP          ; SAMPLE_SETUP / SETUP_SAMPLE
bitorder            = MSB                   ; MSB / LSB
maskr               = 0b10000000            ; value in binary format. SPI's read address mask 
bitrate             = 4000                  ; in kbit/s. 4000 is max value for Aardvard
ss_polarity         = ACTIVE_LOW            ; ACTIVE_LOW / ACTIVE_HIGH

[aardvark_spi]
; Aardvark SPI bus configuration
aa_gpio_direction   = 0x00                  ; value in hex format. 0x00 = all lines are input
aa_gpio_pullup      = 0x00                  ; value in hex format. 0x00 = lines floating
aa_target_power     = AA_TARGET_POWER_BOTH  ; AA_TARGET_POWER_BOTH / AA_TARGET_POWER_NONE

[aardvark_i2c]
aa_gpio_direction   = 0x00                  ; value in hex format. 0x00 = all lines are input
aa_gpio_pullup      = 0x00                  ; value in hex format. 0x00 = lines floating
aa_i2c_pullup       = AA_I2C_PULLUP_BOTH    ; AA_I2C_PULLUP_BOTH / AA_I2C_PULLUP_NONE
aa_target_power     = AA_TARGET_POWER_BOTH  ; AA_TARGET_POWER_BOTH / AA_TARGET_POWER_NONE

[linux_gpio]
;pin1_index          = 30                    ; for reference beaglebone black
;pin2_index          = 60                    ; for reference beaglebone black
pin1_index           = 13                    ; Raspberry Pi int1 kxg03
pin2_index           = 19                    ; Raspberry Pi int2 kxg03

[protocol_gpio]
; Settings for Kionix IoT Board using BLE  connection
;pin1_index          = 0                     ; PAD TEST 1,MCU_GENIO1_INT1 ; int1 of kmx62
pin1_index         = 16                     ; PAD TEST 5, MCU_DINT ; int1 of kxg03, int of bm1383 and int1 of kx122
pin2_index          = 13                    ; PAD TEST 4, MCU_SINT ; int2 of kxg03 and int2 of kx122
;pin1_index          = 28                    ;Kx122 Nrf51-dk

[serial_com_kx_iot]
; Settings for Kionix IoT Board using USB serial connection
; note active low polarity needed for settings "int1_active_high" and "int2_active_high"

com_port            = auto                  ; use "auto" for automatic search
baudrate            = 460800                ; 
start_delay_s       = 0                     ; No delay needed for Kionix IoT board
;pin1_index          = 0                    ; PAD TEST 1, MCU_GENIO1_INT1 ; kmx62 int1 active high & low
pin1_index         = 16                     ; PAD TEST 5, MCU_DINT ; int1 of kxg03, int of bm1383 and int 1 of kx122
;pin1_index          = 28                    ; Kx122 Nrf-51dk 
pin2_index          = 13                    ; PAD TEST 4, MCU_SINT ; int2 of kxg03 and int2 of kx122

[serial_com_arduino_a1]
; Settings for Arduino Uno with Kionix A1 shield using USB serial connection
com_port            = auto
baudrate            = 460800                ; 230400 / 460800
start_delay_s       = 2                     ; Arduino bootloader needs 2 second delay
pin1_index          = 2                     ; KXG03, KX122 
;pin1_index          = 3                     ; KMX62
pin2_index          = 14                    ; KXG03
;pin2_index          = 2                    ; KMX62

[serial_com_arduino_usdc]
; Settings for Arduino Uno with Rohm USDC multi sensor shield  using USB serial connection
; https://github.com/ROHMUSDC/ROHM_SensorPlatform_Multi-Sensor-Shield/
com_port            = auto
baudrate            = 460800                ; 230400 / 460800
start_delay_s       = 2                     ; Arduino bootloader needs 2 second delay
;pin1_index          = 6                    ; Arduino + USDC shield KXG03 
;pin1_index          = 7                    ; Arduino + USDC shield BMI1383 (BM1383AGLV)
;pin1_index          = 8                    ; Arduino + USDC shield RPR0521
;pin1_index          = 9                     ; Arduino + USDC shield KMX62 
;pin1_index          = 10;                   ; Arduino + USDC shield KX122 10, 11, 12, 13


